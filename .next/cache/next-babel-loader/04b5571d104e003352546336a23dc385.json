{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"/Users/joelkinman/dev/jk/jk-next-static/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '../layouts/main';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport data from '../data/page';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"pages/index.js\"), data.map(function (page) {\n    return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, page.title);\n  }), _Array$isArray(props.shows) && props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, show.name)));\n  }));\n};\n\nIndex.syncContentfulData;\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/joelkinman/dev/jk/jk-next-static/pages/index.js"],"names":["Layout","fetch","Link","data","Index","props","map","page","title","shows","show","id","name","syncContentfulData","getInitialProps","res","json","console","log","length","entry"],"mappings":";;;;;;AAAA,SAAQA,MAAR,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAEC,KAAF,EAAa;AACvB,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKF,IAAI,CAACG,GAAL,CAAU,UAAAC,IAAI;AAAA,WACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,KAAV,CADW;AAAA,GAAd,CAFL,EAKK,eAAcH,KAAK,CAACI,KAApB,KAA8BJ,KAAK,CAACI,KAAN,CAAYH,GAAZ,CAAgB,UAAAI,IAAI;AAAA,WACnD;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmD;AAAA,GAApB,CALnC,CADA;AAgBH,CAjBD;;AAmBAR,KAAK,CAACS,kBAAN;AAEAT,KAAK,CAACU,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFb,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdc,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdb,UAAAA,IAFc;AAIpBc,UAAAA,OAAO,CAACC,GAAR,qCAAyCf,IAAI,CAACgB,MAA9C;AAJoB,2CAMb;AACLV,YAAAA,KAAK,EAAEN,IAAI,CAACG,GAAL,CAAS,UAAAc,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AADF,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeN,KAAf","sourcesContent":["import {Layout} from '../layouts/main'\nimport fetch from 'isomorphic-unfetch'\nimport Link from 'next/link'\nimport data from '../data/page'\n\nconst Index = ( props ) => {\n    return(\n    <Layout>\n        <p>pages/index.js</p>\n        {data.map( page => (\n            <h1>{page.title}</h1>\n        ))}\n        {Array.isArray(props.shows) && props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n      \n    </Layout>\n    )\n}\n\nIndex.syncContentfulData \n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n  \n    console.log(`Show data fetched. Count: ${data.length}`);\n  \n    return {\n      shows: data.map(entry => entry.show)\n    }\n  }\n\nexport default Index"]},"metadata":{},"sourceType":"module"}