{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"/Users/joelkinman/dev/jk/jk-next-static/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from '../layouts/main';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"pages/index.js\"), _Array$isArray(props.shows) && props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, show.name)))), __jsx(\"h6\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, _JSON$stringify(props)));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/joelkinman/dev/jk/jk-next-static/pages/index.js"],"names":["Layout","fetch","Link","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;;;AAAA,SAAQA,MAAR,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,eAAcA,KAAK,CAACC,KAApB,KAA8BD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnD;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADF,CADF,CAD+B,CAFnC,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAK,gBAAeL,KAAf,CAAL,CAVF,CADJ;;AAgBAD,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASW,KAAK,IAAIA,KAAK,CAACV,IAAxB;AADF,GAAP;AAGD,CATH;;AAWA,eAAeJ,KAAf","sourcesContent":["import {Layout} from '../layouts/main'\nimport fetch from 'isomorphic-unfetch'\nimport Link from 'next/link';\n\nconst Index = ( props ) => (\n    <Layout>\n        <p>pages/index.js</p>\n        {Array.isArray(props.shows) && props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n\n      <h6>{JSON.stringify(props)}</h6>\n      \n    </Layout>\n)\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n  \n    console.log(`Show data fetched. Count: ${data.length}`);\n  \n    return {\n      shows: data.map(entry => entry.show)\n    }\n  }\n\nexport default Index"]},"metadata":{},"sourceType":"module"}